apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'application'

mainClassName = 'edu.cmu.cs.seai.teama.kafkastreamprocess.MovieLogKafkaReader'

test.testLogging { exceptionFormat "full"; events "failed", "passed", "skipped" }

group '17645-TeamA'
version '1.0-SNAPSHOT'

sourceCompatibility = 11.0

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        force 'org.ow2.asm:asm:6.2.1'
        forcedModules = [ 'org.ow2.asm:asm:6.2.1' ]
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.3.0'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20190722'

}

checkstyle {
    ignoreFailures = true
    toolVersion = "8.7"
    sourceSets = [sourceSets.main]
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9'
    }
}
apply plugin: 'com.github.spotbugs'

spotbugs {
    toolVersion = '3.1.8'
}

spotbugsTest.enabled = true

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
    ignoreFailures = true
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}